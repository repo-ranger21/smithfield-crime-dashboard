name: Daily Crime Data Update

on:
  schedule:
    # Run daily at 6:00 AM UTC (adjust timezone as needed)
    - cron: '0 6 * * *'
  workflow_dispatch: # Allow manual triggering
    inputs:
      force_update:
        description: 'Force update even if recent data exists'
        required: false
        default: 'false'
        type: boolean

jobs:
  update-crime-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # TODO: Add requirements.txt installation when created
          # pip install -r requirements.txt
          
      - name: Create logs directory
        run: mkdir -p logs
        
      - name: Run crime data update
        env:
          CRIMEGRADE_API_KEY: ${{ secrets.CRIMEGRADE_API_KEY }}
          NEIGHBORHOODSCOUT_API_KEY: ${{ secrets.NEIGHBORHOODSCOUT_API_KEY }}
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_WORKSPACE_ID: ${{ secrets.NOTION_WORKSPACE_ID }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: python scripts/update_crime_data.py
        
      - name: Commit updated data
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/
          if git diff --staged --quiet; then
            echo "No data changes to commit"
          else
            git commit -m "Automated crime data update - $(date -u)"
            git push
          fi
          
  generate-weekly-reports:
    runs-on: ubuntu-latest
    # Run weekly reports on Mondays at 8:00 AM UTC
    if: github.event.schedule == '0 8 * * 1' || github.event_name == 'workflow_dispatch'
    needs: update-crime-data
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for trend analysis
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # TODO: Add requirements.txt installation when created
          # pip install -r requirements.txt
          
      - name: Create logs directory
        run: mkdir -p logs
        
      - name: Generate weekly reports
        env:
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_WORKSPACE_ID: ${{ secrets.NOTION_WORKSPACE_ID }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: python scripts/generate_reports.py
        
      - name: Archive reports
        uses: actions/upload-artifact@v3
        with:
          name: weekly-crime-reports
          path: reports/
          retention-days: 30